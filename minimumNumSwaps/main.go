package main

import (
	"fmt"
	"math"
)

func main() {
	fmt.Println(swap([]int32{4, 3, 1, 2}))
	fmt.Println(swap([]int32{5, 3, 4, 7, 1, 6, 2}))
}

func swap(arr []int32) int64 {
	var count int64
	fItem := 1
	lastValue := len(arr) - 1

	for i := lastValue; i >= 0; i-- {
		currValue := int(arr[i])
		if currValue == fItem {
			swaps := math.Floor(float64((i - (fItem - 1)) / 2))
			x := i
			for z := swaps; z > 0; z-- {
				arr[x], arr[x-2] = arr[x-2], arr[x]
				x -= 2
			}

			count += int64(swaps)
			if x == fItem {
				count++
				arr[x], arr[x-1] = arr[x-1], arr[x]
			}
			fItem++
			i = lastValue + 1
		}
	}

	return count
}

/*
{5, 3, 4, 7, 1, 6, 2}
{4, 3, 5, 7, 1, 6, 2} - (5, 4)
{4, 3, 1, 7, 5, 6, 2} - (5, 1)
{1, 3, 4, 7, 5, 6, 2} - (4, 1)
{1, 3, 4, 6, 5, 7, 2} - (7, 6)
{1, 3, 4, 6, 5, 2, 7} - (7, 2)
{1, 3, 4, 6, 2, 5, 7} - (5, 2)
{1, 3, 4, 2, 6, 5, 7} - (6, 2)
{1, 3, 4, 2, 5, 6, 7} - (6, 5)
{1, 3, 2, 4, 6, 5, 7} - (4, 2)
{1, 2, 3, 4, 6, 5, 7} - (3, 2)


-------------------------|
  {1, 2, 3, 4, 6, 5, 7}  |
-------------------------|
  {5, 3, 4, 7, 1, 6, 2}  |
-------------------------|

{5, 3, 1, 7, 4, 6, 2} - (4, 1)
{1, 3, 5, 7, 4, 6, 2} - (5, 1)
{1, 3, 5, 7, 2, 6, 4} - (4, 2)
{1, 3, 2, 7, 5, 6, 4} - (5, 2)
{1, 2, 3, 7, 5, 6, 4} - (3, 2)
{1, 2, 3, 7, 4, 6, 5} - (5, 4)
{1, 2, 3, 4, 7, 6, 5} - (7, 4)
{1, 2, 3, 4, 5, 6, 7} - (7, 5)

*/
